version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.0

jobs: 
  build:
    machine:
      image: ubuntu-1604:202007-01 
    steps:
      - checkout
      - run:
          name: 'Remove Postgres Password set up from env file'
          command: |
            sed -i '/POSTGRES_PASSWORD/d' docker/.env
      - run:
          name: 'Add DB Password to config files'
          command: |
             SUPERSET_DB_PASS=$(aws secretsmanager get-secret-value --secret-id /data-viz/db/db_pass --query 'SecretString' --output text) && echo -e "POSTGRES_PASSWORD=$SUPERSET_DB_PASS" >> docker/.env
      - run:
          name: 'Add Mapbox key to config file'
          command: |
            MAPBOX_KEY=$(aws secretsmanager get-secret-value --secret-id /data-viz/map_box/key --query 'SecretString' --output text) && echo -e "MAPBOX_KEY=$MAPBOX_KEY" >> docker/.env
      # Save workspace for subsequent jobs
      - persist_to_workspace:
          root: .
          paths:
            - .

  deploy:
    parameters:
      env:
        description: 'The environment to deploy Superset to (staging or prod)'
        type: string
    machine:
      image: ubuntu-1604:202007-01 
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install Elastic Beanstalk CLI
          working_directory: /
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev build-essential
            sudo pip3 install awsebcli
      - run:
          name: Initialize Elastic Beanstalk
          command: eb init ece-superset-<< parameters.env >>-app --region us-east-2 --platform docker
      - run:
          name: Deploy to Elastic Beanstalk environment
          command: eb deploy ece-superset-<< parameters.env >>-env
      # - run:
      #     name: 'Copy Favicon'
      #     command: |
      #       ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "docker cp docker/images/favicon.ico superset:/app/superset/static/assets/images/favicon.png"

# # One time init of database
#  init:
#    machine:
#      image: ubuntu-1604:202007-01
#    steps:
#      - checkout
#      - add_ssh_keys
#      - run:
#          name: 'Set up database'
#          command: |
#            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "docker exec -it superset superset db upgrade && docker exec -it superset superset init"
#      - run:
#          name: 'Create admin user'
#          command: |
#            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "docker exec -it superset superset fab create-admin \
#                                                                                         --username USERNAME \
#                                                                                         --firstname FIRSTNAME \
#                                                                                         --lastname LASTNAME \
#                                                                                         --email EMAIL \
#                                                                                         --password ********"
workflows:
  deploy-prod:
    jobs:
      - hold:
          type: approval
      - build:
          requires:
            - hold
      - deploy:
          env: prod
          requires:
            - build
  deploy-staging:
    jobs:
      - hold:
          type: approval
      - build:
          requires:
            - hold
      - deploy:
          env: staging
          requires:
            - build