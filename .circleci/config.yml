version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.3.0

jobs: 
  install:  # TODO: Move all these install steps to terraform init, if we end up keeping this
    machine:
      image: ubuntu-1604:202007-01 
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: 'Install Git'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo yum install git"
      - run:
          name: 'Install Docker Engine'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo amazon-linux-extras install docker"
      - run:
          name: 'Start Docker'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo service docker start"
      - run:
          name: 'Add ec2-user to Docker group'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo usermod -a -G docker ec2-user"
      # - run:
      #     name: 'Install pinned version of Docker Compose'  # https://github.com/docker/compose/issues/8064
      #     command: |
      #       ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo su && sudo curl -L https://get.daocloud.io/docker/compose/releases/download/1.27.4/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose"
      # - run:
      #     name: 'Change Docker Compose permissions'
      #     command: |
      #       ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo chmod +x /usr/local/bin/docker-compose"
      # - run:
      #     name: 'Add Docker Compose to path'
      #     command: |
      #       ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose"
  build:
    machine:
      image: ubuntu-1604:202007-01 
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: 'Copy docker files to instance'
          command: |
            scp -r docker/ ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com:
      - aws-cli/setup
      - run:
          name: 'Add DB Password to config files'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "echo -e "SQLALCHEMY_DATABASE_URI='postgresql+psycopg2://superset_admin:$(aws secretsmanager get-secret-value --secret-id /data-viz/db/db_pass)@superset_db/superset'" >> docker/config/superset_config.py && echo -e "POSTGRES_PASSWORD=$(aws secretsmanager get-secret-value --secret-id /data-viz/db/db_pass)" >> docker/.env"
  start:
    machine:
      image: ubuntu-1604:202007-01 
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: 'Start SuperSet'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "cd docker && docker-compose up -d"
  init:
    machine:
      image: ubuntu-1604:202007-01
    steps:
      - checkout
      - add_ssh_keys
      - run:
          name: 'Set up database'
          command: |
            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "docker exec -it superset superset db upgrade && docker exec -it superset superset init"
#      - run:
#          name: 'Create admin user'
#          command: |
#            ssh ec2-user@ec2-3-134-85-99.us-east-2.compute.amazonaws.com "docker exec -it superset superset fab create-admin \
#                                                                                         --username USERNAME \
#                                                                                         --firstname FIRSTNAME \
#                                                                                         --lastname LASTNAME \
#                                                                                         --email EMAIL \
#                                                                                         --password ********"
workflows:
  deploy:
    jobs:
      - hold:
          type: approval
      - install:
          requires:
            - hold
      - build:
          requires:
            - install
      - start:
          requires:
            - build